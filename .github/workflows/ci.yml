name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Read tool versions
      id: tool-versions
      run: |
        SCARB_VERSION=$(grep '^scarb' .tool-versions | cut -d' ' -f2)
        FOUNDRY_VERSION=$(grep '^starknet-foundry' .tool-versions | cut -d' ' -f2)
        echo "scarb_version=$SCARB_VERSION" >> $GITHUB_OUTPUT
        echo "foundry_version=$FOUNDRY_VERSION" >> $GITHUB_OUTPUT
        echo "Using Scarb $SCARB_VERSION and Starknet Foundry $FOUNDRY_VERSION"

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

    - name: Cache Scarb and Foundry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/scarb
          ~/.local/bin/snfoundryup
          ~/.foundry/bin
        key: ${{ runner.os }}-cairo-tools-${{ steps.tool-versions.outputs.scarb_version }}-${{ steps.tool-versions.outputs.foundry_version }}
        restore-keys: |
          ${{ runner.os }}-cairo-tools-

    - name: Install Scarb
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://docs.swmansion.com/scarb/install.sh | sh -s -- -v ${{ steps.tool-versions.outputs.scarb_version }}
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install Starknet Foundry
      run: |
        curl -L https://raw.githubusercontent.com/foundry-rs/starknet-foundry/master/scripts/install.sh | sh
        export PATH="$HOME/.local/bin:$PATH"
        snfoundryup -v ${{ steps.tool-versions.outputs.foundry_version }}
        echo "$HOME/.foundry/bin" >> $GITHUB_PATH
        export PATH="$HOME/.foundry/bin:$PATH"

    - name: Verify tool versions
      run: |
        export PATH="$HOME/.foundry/bin:$PATH"
        scarb --version
        snforge --version

    - name: Build contracts
      run: scarb build

    - name: Run tests
      run: |
        export PATH="$HOME/.foundry/bin:$PATH"
        scarb test

    - name: Check formatting
      run: scarb fmt --check || echo "Format check completed"

  validate-dependencies:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Validate Scarb.toml
      run: |
        if [ ! -f "Scarb.toml" ]; then
          echo "Scarb.toml not found!"
          exit 1
        fi
        echo "Scarb.toml validation passed" 